{"version":3,"sources":["components/Error.js","components/AddTask.js","components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/LocalStorage.js","App.js","index.js"],"names":["error","text","style","color","fontWeight","fontSize","AddTask","onAdd","useState","task","setTask","day","setDay","reminder","setReminder","incompleteForm","setIncompleteForm","className","onSubmit","e","preventDefault","includes","id","Math","floor","random","Error","type","placeholder","onChange","target","value","currentTarget","checked","Button","onClick","backgroundColor","defaultProps","Header","title","toggleTaskForm","showForm","Task","toggleReminder","removeTask","onDoubleClick","Tasks","tasks","map","Storage","key","items","localStorage","getItem","JSON","parse","console","log","getItems","push","setItem","newItems","filter","item","stringify","App","showTask","showAddTask","toggleShowAddTask","newTask","storeItem","length","deleteItem","storedTasks","forEach","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c0fa2b2.chunk.js","sourcesContent":["const error = ({text}) => {\r\n    return (\r\n        <p style={{color:'red',fontWeight:'lighter',fontSize:'.9rem'}}>{text}</p>\r\n    )\r\n}\r\n\r\nexport default error\r\n","import { useState } from \"react\"\r\nimport Error from './Error'\r\n\r\nconst AddTask = ({onAdd}) => {\r\n   const [task, setTask] = useState('')\r\n   const [day, setDay] = useState('')\r\n   const [reminder, setReminder] = useState(false)\r\n   \r\n   const [incompleteForm,setIncompleteForm] = useState(false)\r\n   \r\n   const submitTask=(e)=>{\r\n\r\n   e.preventDefault();\r\n\r\n   if([task,day].includes('')){\r\n    setIncompleteForm(true)\r\n    \r\n   }else{\r\n    setIncompleteForm(false);\r\n    onAdd({\r\n    id: Math.floor(Math.random() * 10000 + 1),\r\n    text:task,\r\n    day:day,\r\n    reminder:reminder \r\n    })\r\n    \r\n    setTask('')\r\n    setDay('')\r\n    setReminder(false)\r\n   }\r\n   \r\n   \r\n}\r\n\r\n    return (\r\n        <form className='add-form' onSubmit={submitTask} >\r\n\r\n           {incompleteForm && <Error text='Please Fill All Parameters' />}\r\n\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input type='text' placeholder='Add task'\r\n                onChange={(e)=>{setTask(e.target.value)}}\r\n                value={task}\r\n                />\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Day</label>\r\n                <input type='text' placeholder='Add day and time'\r\n                onChange={(e)=>{setDay(e.target.value)}}\r\n                value={day}\r\n                />\r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n                <label>Reminder</label>\r\n                <input type='checkbox'\r\n                onChange={(e)=>{setReminder(e.currentTarget.checked)}}\r\n                checked={reminder}\r\n                />\r\n            </div>\r\n            <input className='btn  btn-block' type='submit' value='Add task' />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Button = ({color,text,onClick}) => {\r\n   \r\n    return <button style = {{backgroundColor : color}} onClick={onClick} className='btn'>{text}</button>\r\n}\r\n\r\nButton.defaultProps = {\r\n    color : 'steelblue'\r\n}\r\n\r\nButton.propTypes = {\r\n    color : PropTypes.string,\r\n    text : PropTypes.string\r\n\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\n\r\nconst Header = ({title,toggleTaskForm,showForm}) => (\r\n    <header className='header'>\r\n        <h1>{title}</h1>\r\n        <Button color= {showForm ? 'red' : 'green' } text= {showForm ? 'Close' : 'Add'} onClick={toggleTaskForm} />\r\n      \r\n    </header>\r\n)\r\n\r\n\r\nHeader.defaultProps = {\r\n    title : 'Task Tracker'\r\n}\r\n\r\n//for prop type checking\r\nHeader.propTypes = {\r\n    title : PropTypes.string\r\n}\r\n\r\nexport default Header\r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({task,toggleReminder,removeTask}) => {\r\n    return (\r\n       <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={()=>{toggleReminder(task.id)}}>\r\n          <h3>{task.text} <FaTimes onClick={()=>{removeTask(task.id)}}  style={{color:'red'}}/></h3>\r\n          <p>{task.day}</p>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from \"./Task\"\r\n\r\nconst Tasks = ({tasks,toggleReminder,removeTask}) => {\r\n    return (\r\n        <div>\r\n         {\r\n         tasks.map((task)=>{\r\n         return <Task key={task.id} task={task} removeTask={removeTask} toggleReminder={toggleReminder}/>\r\n         })\r\n         }           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","class Storage {\r\n\r\n  static getItems(key) {\r\n\r\n    let items;\r\n    if (localStorage.getItem(key) === null) {\r\n      items = []\r\n    } else {\r\n      items = JSON.parse(localStorage.getItem(key))\r\n    }\r\n    console.log(items);\r\n    return items\r\n\r\n  }\r\n\r\n  static storeItem(key,value) {\r\n    const items = Storage.getItems(key)\r\n    items.push(value)\r\n   Storage.setItem(key,items)\r\n   console.log(items);\r\n  }\r\n\r\n  static deleteItem(key,id) {\r\n    const items = Storage.getItems(key)\r\n   const newItems = items.filter((item)=>{\r\n    return item.id !== id \r\n  })\r\n   Storage.setItem(key,newItems)\r\n  }\r\n  static setItem(key,value){\r\n    localStorage.setItem(key,JSON.stringify(value))\r\n  }\r\n}\r\n\r\nexport default Storage","import { useState } from 'react'\nimport AddTask from './components/AddTask'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport Storage from './components/LocalStorage'\n\n\n\nconst App = () => {\n  const [tasks, showTask] = useState(Storage.getItems('tasks'))\n\n const addTask=(task)=>{\n  const newTask = task\n Storage.storeItem('tasks',task)  \n  showTask([...tasks,newTask])\n }\n  \n const removeTask=(id)=>{\n    showTask(tasks.filter((task)=>{\n      return task.id !== id\n    }))\n    Storage.deleteItem('tasks',id)\n }\n\n const[showAddTask,toggleShowAddTask] = useState(false)\n  \n const toggleForm=()=>{\n   toggleShowAddTask(!showAddTask)\n }\n\n const toggleReminder=(id)=>{\n   showTask(\n    tasks.map((task)=>{\n      return task.id === id ? {...task,reminder:!task.reminder} : task\n     })\n   )\n\n   const storedTasks=Storage.getItems('tasks')\n   storedTasks.forEach((task)=>{\n     if(task.id === id){\n       task.reminder=!task.reminder\n       Storage.setItem('tasks',storedTasks) \n      }\n   })\n   \n }\n\n \n \n  \n return (\n    <div className='container'>\n      <Header toggleTaskForm={toggleForm} showForm={showAddTask}/>\n      {showAddTask && <AddTask onAdd={addTask} /> }\n      {\n      tasks.length===0 ? 'Add a task...' : \n      <Tasks tasks={tasks} \n      removeTask={removeTask} \n      toggleReminder={toggleReminder}/>\n      }\n\n    </div>\n  )\n}\n\nexport default App\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}